// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using clinica2.Data;

#nullable disable

namespace clinica2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("clinica2.Models.diagnosis", b =>
                {
                    b.Property<int>("id_diagnosis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_diagnosis"));

                    b.Property<string>("diagnosis_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_diagnosis");

                    b.ToTable("diagnosis");
                });

            modelBuilder.Entity("clinica2.Models.doctors", b =>
                {
                    b.Property<int>("id_doctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_doctor"));

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("id_role")
                        .HasColumnType("int");

                    b.Property<int>("id_specialization")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("middle_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id_doctor");

                    b.HasIndex("id_role");

                    b.HasIndex("id_specialization");

                    b.ToTable("doctors");
                });

            modelBuilder.Entity("clinica2.Models.patients", b =>
                {
                    b.Property<int>("id_patient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_patient"));

                    b.Property<DateTime?>("date_of_birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("id_role")
                        .HasColumnType("int");

                    b.Property<int>("id_site")
                        .HasColumnType("int");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("middle_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("policy_number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id_patient");

                    b.HasIndex("id_role");

                    b.HasIndex("id_site");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("clinica2.Models.receptions", b =>
                {
                    b.Property<int>("id_reception")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_reception"));

                    b.Property<DateTime?>("date_reception")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_diagnosis")
                        .HasColumnType("int");

                    b.Property<int>("id_doctor")
                        .HasColumnType("int");

                    b.Property<int>("id_patient")
                        .HasColumnType("int");

                    b.Property<int>("id_status")
                        .HasColumnType("int");

                    b.Property<string>("symptoms")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan?>("time_reception")
                        .HasColumnType("time");

                    b.Property<string>("treatment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_reception");

                    b.HasIndex("id_diagnosis");

                    b.HasIndex("id_doctor");

                    b.HasIndex("id_patient");

                    b.HasIndex("id_status");

                    b.ToTable("receptions");
                });

            modelBuilder.Entity("clinica2.Models.roles", b =>
                {
                    b.Property<int>("id_role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_role"));

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_role");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("clinica2.Models.site", b =>
                {
                    b.Property<int>("id_site")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_site"));

                    b.Property<string>("site_number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_site");

                    b.ToTable("site");
                });

            modelBuilder.Entity("clinica2.Models.specializations", b =>
                {
                    b.Property<int>("id_specialization")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_specialization"));

                    b.Property<string>("specialization_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_specialization");

                    b.ToTable("specializations");
                });

            modelBuilder.Entity("clinica2.Models.status", b =>
                {
                    b.Property<int>("id_status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_status"));

                    b.Property<string>("status_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_status");

                    b.ToTable("status");
                });

            modelBuilder.Entity("clinica2.Models.doctors", b =>
                {
                    b.HasOne("clinica2.Models.roles", "roles")
                        .WithMany("doctors")
                        .HasForeignKey("id_role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clinica2.Models.specializations", "specializations")
                        .WithMany("doctors")
                        .HasForeignKey("id_specialization")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roles");

                    b.Navigation("specializations");
                });

            modelBuilder.Entity("clinica2.Models.patients", b =>
                {
                    b.HasOne("clinica2.Models.roles", "roles")
                        .WithMany("patients")
                        .HasForeignKey("id_role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clinica2.Models.site", "site")
                        .WithMany("patients")
                        .HasForeignKey("id_site")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("roles");

                    b.Navigation("site");
                });

            modelBuilder.Entity("clinica2.Models.receptions", b =>
                {
                    b.HasOne("clinica2.Models.diagnosis", "diagnosis")
                        .WithMany("receptions")
                        .HasForeignKey("id_diagnosis")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clinica2.Models.doctors", "doctors")
                        .WithMany("receptions")
                        .HasForeignKey("id_doctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clinica2.Models.patients", "patients")
                        .WithMany("receptions")
                        .HasForeignKey("id_patient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clinica2.Models.status", "status")
                        .WithMany("receptions")
                        .HasForeignKey("id_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("diagnosis");

                    b.Navigation("doctors");

                    b.Navigation("patients");

                    b.Navigation("status");
                });

            modelBuilder.Entity("clinica2.Models.diagnosis", b =>
                {
                    b.Navigation("receptions");
                });

            modelBuilder.Entity("clinica2.Models.doctors", b =>
                {
                    b.Navigation("receptions");
                });

            modelBuilder.Entity("clinica2.Models.patients", b =>
                {
                    b.Navigation("receptions");
                });

            modelBuilder.Entity("clinica2.Models.roles", b =>
                {
                    b.Navigation("doctors");

                    b.Navigation("patients");
                });

            modelBuilder.Entity("clinica2.Models.site", b =>
                {
                    b.Navigation("patients");
                });

            modelBuilder.Entity("clinica2.Models.specializations", b =>
                {
                    b.Navigation("doctors");
                });

            modelBuilder.Entity("clinica2.Models.status", b =>
                {
                    b.Navigation("receptions");
                });
#pragma warning restore 612, 618
        }
    }
}
